= Quick Guide to Using Dimmunix for Java =

This guide helps you get Dimmunix and use it to immunize Java programs against deadlock bugs.

== Download and Install ==

Follow the instructions from [Installation]

== Use Dimmunix on a Test  Java Program ==

The test program from DimmunixASM/src/Test.java deadlocks deterministically.
Go into DimmunixASM folder and run the deadlocking program by executing: 
{{{
java -cp bin Test
}}}
You notice that the test program deadlocks every time you run it.
You can terminate the program by typing *Ctrl-C*.

Now run the test program with Dimmunix by executing:
{{{
java -cp bin:<path to asm-3.2>/lib/asm-3.2.jar -Xbootclasspath/p:<path do DimmunixASM/bin> -javaagent:<path to Dimmunix.jar> Test
}}}
You notice that the program deadlocks in the first run.
Terminate the program with *Ctrl-C*.

Run the test program with Dimmunix again.
You notice that the program does not deadlock in the subsequent runs, if run with Dimmunix.

== Inspect the Deadlock History ==

You can find the deadlock history in *$HOME/Dimmunix/Dimmunix.hist*.

The deadlock history consists of deadlock signatures, one per line.

The signature of a deadlock involving n threads has the following format:
{{{
deadlock_template=depth_1#outer_call_stack_1#inner_call_stack_1;...,depth_n#outer_call_stack_n#inner_call_stack_n
}}}
where outer_call_stack_i and inner_call_stack_i represent the call stacks thread i had when it acquired a lock involved in the deadlock and respectively requested another lock involved in the deadlock.

For instance, the deadlock from our test program has the following signature:
{{{
deadlock_template=1#java.lang.Thread.run(Thread.java:595)#Test$1.run(Test.java:20),java.lang.Thread.run(Thread.java:595);1#java.lang.Thread.run(Thread.java:595)#Test$2.run(Test.java:31),java.lang.Thread.run(Thread.java:595)
}}}

= Quick Guide to Using Dimmunix for C/C++ =

== Download and Install ==

Follow the instructions from [Installation]

== Use Dimmunix on test programs ==

 # Checkout the tests
{{{
svn checkout http://dimmunix.googlecode.com/svn/trunk/pthreads/test dimmunix-pthreads-test
}}} In dimmunix-pthreads-test/test.cc, dimmunix-pthreads-test/hawknl/src/deadlock3.c and dimmunix-pthreads-test/sqlite/deadlock_test/deadlock.c, you can find test programs that deadlock deterministically. 
 # Compile and run the tests
{{{
cd dimmunix-pthreads-test
sh ./run_tests
}}}
 In the first run, each test deadlocks and Dimmunix saves the deadlock history in the folder containing the test. In future runs, the test never deadlocks again.

= Notes: =

# We tested C/C++ Dimmunix on the following operating systems:
 * Ubuntu 9.10 32 bit
 * Ubuntu 9.04 32 bit
 * Ubuntu 8.10 32 bit
 * Ubuntu 9.10 64 bit
 * Fedora 11 32 bit
 * Fedora 9 32 bit