= Quick Guide to Using Java Dimmunix =

This guide helps you install Java Dimmunix and use it to immunize Java programs against deadlock bugs.

== Install Java Dimmunix ==

 # Download and unpack the [http://download.forge.objectweb.org/asm/asm-3.2-bin.zip ASM instrumentation framework]
 # Check out Java Dimmunix
{{{
svn checkout http://dimmunix.googlecode.com/svn/trunk/java dimmunix-java
}}}
 # Compile Java Dimmunix 
{{{
cd dimmunix-java/src/Dimmunix
ant
cd ../DimmunixInstrumentation
ant
}}}

== Use Dimmunix on Test Java Programs ==

The test programs from dimmunix-java/test folder deadlock deterministically.

To use Dimmunix on a test program, do the following steps:

1. Compile the tests
{{{
cd dimmunix-java/test
ant
}}}
2. Run the test from Test.java
{{{
java dimmunixTests.Test
}}}
 You notice that the test deadlocks every time you run it. You can terminate it by typing *Ctrl-C*.
3. Now run the test program with Dimmunix
{{{
java -cp .:<path to asm-3.2>/lib/asm-3.2.jar -Xbootclasspath/p:../src/Dimmunix/bin -javaagent:../src/DimmunixInstrumentation/DimmunixAgent.jar dimmunixTests.Test
}}}
 You notice that the program deadlocks in the first run. Terminate the program with *Ctrl-C*. Run the test program with Dimmunix again. You notice that the program does not deadlock in the subsequent runs.

== Inspect the Deadlock History ==

You can find the deadlock history in *$HOME/Dimmunix/Dimmunix.hist*.

The deadlock history consists of deadlock signatures, one per line.

The signature of a deadlock involving n threads has the following format:
{{{
deadlock_template=depth_1#call_stack_1;...;depth_n#call_stack_n
}}}
 where call_stack_i represents the call stack thread i had when it acquired a lock involved in the deadlock.